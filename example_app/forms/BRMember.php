<?phpnamespace app\forms;use row\core\Options;use row\utils\Email;use app\models;use app\specs\Output;class BRMember extends \app\specs\SimpleForm {	protected function elements( $defaults ) {		$admin = rand(0, 1);		$elements = array(			'username' => array(				'type' => 'text',				'required' => true,				'minlength' => 0,			),			'firstname' => array(				'type' => 'text',				'required' => true,				'minlength' => 2,			),			'middlename' => array(				'type' => 'text',				'title' => 'Middle name',			),			'lastname' => array(				'type' => 'text',				'required' => true,				'minlength' => 2,			),			'password' => array(				'type' => 'text',				'required' => false,			),			'email' => array(				'type' => 'text',				'title' => 'E-mail',				'required' => true,				'minlength' => 0,				'validation' => 'email',				'error' => 'Invalid e-mail address, dude...',				'description' => Output::translate('Can be empty, but must otherwise be valid'),			),			'phone1' => array(				'type' => 'text',				'title' => 'Phone 1',				'required' => false,			),			'phone2' => array(				'type' => 'text',				'title' => 'Phone 2',				'required' => false,			),			'birthdate' => array(				'type' => 'date',				'required' => true,				'minlength' => 0,				'validation' => 'date',			),			'group' => array(				'type' => 'dropdown',				'required' => true,				'options' => \app\models\Category::all('category_name <> ?', ''),				'validation' => 'options',//				'render' => 'renderElement_Group',			),			'secret' => array(				'type' => 'text',			),			'oele' => array(				'type' => 'text',			),			array(				'always' => true,				'require' => array('phone1', 'phone2'), // phone1 & phone2 have no validation, so they always pass				'validation' => function( $form ) {					if ( !$form->input('phone1') && !$form->input('phone2') ) {						return 'Must enter at least 1 phone number';					}				},				'fields' => 'phone1, phone2',			),			array(				'require' => array('phone1'),				'validation' => 'phoneNumber',				'fields' => 'phone1',			),			array(				'require' => array('phone2'),				'validation' => 'phoneNumber',				'fields' => 'phone2',			),		);		if ( !$admin ) {			unset($elements['secret']);		}		return $elements;	}	public function renderElement_Group( $name, $element, $form ) {		$html = $this->renderOptionsElement($name, $element, false);		$html .= ' OR ';		$html .= '<input type=checkbox> Groupless =(';		return $this->renderElementWrapperWithTitle($html, $element);	}	public function renderElementWrapper( $html, $element ) {		if ( !$this->options->table ) {			return parent::renderElementWrapper($html, $element);		}		return $html;	}	public function renderElementWrapperWithTitle( $input, $element ) {		if ( !$this->options->table ) {			return parent::renderElementWrapperWithTitle($input, $element);		}		$name = $element['_name'];		$description = empty($element['description']) ? '' : '<span class="icon help" title="'.Output::html($element['description']).'">HELP</span>';		$html = '<th class="'.$this->elementWrapperClasses($element).'">'.$description.$element['title'].'</th>';		$html .= '<td class="input '.$this->elementWrapperClasses($element).'">'.$input.'</td>';		return $this->renderElementWrapper($html, $element);	}}